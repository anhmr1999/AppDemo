// <auto-generated />
using System;
using Efcore.CodeFirst;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Efcore.CodeFirst.Migrations
{
    [DbContext(typeof(CodeFirstDbContext))]
    partial class CodeFirstDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Efcore.CodeFirst.Product", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_key");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_id");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("product_available");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("product_price");

                    b.HasKey("Key");

                    b.ToTable("table_product", (string)null);

                    b.HasData(
                        new
                        {
                            Key = 1,
                            IsAvailable = false,
                            Name = "Product 1",
                            Price = 10.0
                        },
                        new
                        {
                            Key = 2,
                            Id = new Guid("e6b6e7e4-6839-4323-a63f-e78bf7da44ec"),
                            IsAvailable = false,
                            Name = "Pro max",
                            Price = 100.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
